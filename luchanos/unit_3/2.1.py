"""
2.1 Написать декоратор, который внутри себя выполнял бы функцию и возвращал бы результат её работы в случае успешного
выполнения. В случае возникновения ошибки во время выполнения функции нужно сделать так, чтобы выполнение функции было
повторено ещё раз с теми же самыми аргументами, но не более 10 раз. Если после последней попытки функцию так и не
удастся выполнить успешно, то бросать исключение.
2.2 Параметризовать декоратор таким образом, чтобы количество попыток
выполнения функции можно было задавать как параметр во время декорирования.
"""


def dec__(trynumber):
    def dec_(f):
        def wrapper(*args, **kwargs):
            for i in range(trynumber):
                try:
                    res = f(*args, **kwargs)
                except:
                    if i != trynumber - 1:
                        print('Что-то пошло не так...')
                        continue
                    else:
                        print('исключение')
                else:
                    return res

        return wrapper

    return dec_


@dec__(trynumber=5)
def div_(a, b):
    return a / b


print(div_(4, 0))
